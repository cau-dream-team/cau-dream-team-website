name: Build and Deploy

on:
  push:
    branches: ['main']
  repository_dispatch:
    types: [update_notes]

env:
  COURSE_DIR: public/courses

jobs:
  download_artifacts:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create notes directory
        run: mkdir -p ${{ env.COURSE_DIR }}

      - name: Download artifacts
        run: |
          for instance in ${{ join(fromJSON(github.event.client_payload.artifact_names), ' ') }}; do
            echo "Downloading artifact for $instance"
            # Create a temporary directory for each artifact
            mkdir -p temp_$instance

            # Use GitHub API to get the latest workflow run ID from the source repository
            WORKFLOW_ID=$(curl -s -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
              "https://api.github.com/repos/cau-dream-team/cau-dream-team-notes/actions/workflows/build-and-trigger.yml/runs?status=completed&branch=main&per_page=1" \
              | jq -r '.workflow_runs[0].id')

            # Download the artifact for this instance
            curl -s -L -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" \
              -o temp_$instance/artifact.zip \
              "https://api.github.com/repos/cau-dream-team/cau-dream-team-notes/actions/runs/$WORKFLOW_ID/artifacts/$instance/zip"

            # Extract the artifact to the notes directory
            unzip -q temp_$instance/artifact.zip -d temp_$instance

            # Find the main content zip file and extract it
            MAIN_ZIP=$(find temp_$instance -name "webHelp*.zip" -type f)
            if [ -n "$MAIN_ZIP" ]; then
              unzip -q "$MAIN_ZIP" -d ${{ env.COURSE_DIR }}/$instance
            fi

            # Clean up temporary directory
            rm -rf temp_$instance
          done

      - name: Upload notes directory
        uses: actions/upload-artifact@v3
        with:
          name: notes-directory
          path: ${{ env.COURSE_DIR }}
          retention-days: 1

  build:
    needs: download_artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download notes directory
        uses: actions/download-artifact@v3
        with:
          name: notes-directory
          path: ${{ env.COURSE_DIR }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install

      - name: Build website
        run: pnpm build

      - name: Upload build output
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: ./out
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build output
        uses: actions/download-artifact@v3
        with:
          name: build-output
          path: ./out

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.DEPLOY_KEY }}
          external_repository: cau-dream-team/cau-dream-team.github.io
          publish_dir: ./out
          publish_branch: main
