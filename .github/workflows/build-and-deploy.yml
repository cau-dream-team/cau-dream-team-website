name: Build and Deploy

on:
  push:
    branches: ['main']
  repository_dispatch:
    types: [update_notes]

env:
  COURSE_DIR: public/courses
  NODE_VERSION: 20
  PNPM_VERSION: 9

jobs:
  download_artifacts:
    name: Download Course Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: List releases
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "➡️ Available releases:"
          gh release list --repo cau-dream-team/cau-dream-team-notes

      - name: Download artifacts
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          echo "➡️ Downloading artifacts"
          mkdir -p ${{ env.COURSE_DIR }}
          for instance in cp cv ah kl kp; do
            echo "➡️ Downloading artifact for instance: $instance"
            gh release download --repo cau-dream-team/cau-dream-team-notes --pattern "webHelp$(echo $instance | tr '[:lower:]' '[:upper:]')2-all.zip" --dir ${{ env.COURSE_DIR }}
          done

      - name: Extract artifacts
        run: |
          echo "➡️ Extracting artifacts"
          for zip in ${{ env.COURSE_DIR }}/*.zip; do
            instance=$(basename $zip .zip | sed 's/webHelp//;s/2-all//' | tr '[:upper:]' '[:lower:]')
            echo "➡️ Extracting $instance"
            unzip -o $zip -d ${{ env.COURSE_DIR }}/$instance
            rm $zip
          done

      - name: Upload notes directory
        uses: actions/upload-artifact@v4
        with:
          name: notes-directory
          path: ${{ env.COURSE_DIR }}
          retention-days: 1

  build:
    name: Build Website
    needs: download_artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download notes directory
        uses: actions/download-artifact@v4
        with:
          name: notes-directory
          path: ${{ env.COURSE_DIR }}

      - name: Display notes directory
        run: |
          echo "➡️ Notes directory:"
          ls -R ${{ env.COURSE_DIR }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build website
        run: |
          echo "➡️ Building website"
          pnpm build

      - name: Upload build output
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./out
          retention-days: 1

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build output
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./out

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          deploy_key: ${{ secrets.DEPLOY_KEY }}
          external_repository: cau-dream-team/cau-dream-team.github.io
          publish_dir: ./out
          publish_branch: main

      - name: Log deployment status
        run: echo "➡️ Deployment to GitHub Pages completed"
